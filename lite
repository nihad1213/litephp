#!/usr/bin/env php
<?php

/*
|----------------------------------------------------------------------
| Lightweight CLI Tool for PHP Server & Custom Commands
|----------------------------------------------------------------------
| This script provides a simple command-line interface (CLI) for managing
| various PHP development tasks. It currently supports the `start` command,
| which launches a PHP built-in server, but additional commands can be easily
| added for other development tasks.
|
| Commands can be run with the following format:
| 
| php lite <command>
|
| Created by: Nihad Namatli
|----------------------------------------------------------------------
*/

/*
|----------------------------------------------------------------------
| Change the Current Working Directory
|----------------------------------------------------------------------
| Ensures the script always runs from the directory where it is located.
| This is useful for resolving relative paths such as 'api', ensuring
| consistency when the script is run from different locations.
*/
chdir(__DIR__);

/*
|----------------------------------------------------------------------
| Get Command-Line Arguments
|----------------------------------------------------------------------
| The first argument (`$argv[1]`) will determine which command to execute.
| If no command is passed, the script will display a list of available 
| commands.
*/
$command = $argv[1] ?? null;

/*
|----------------------------------------------------------------------
| Switch on Command
|----------------------------------------------------------------------
| Depending on the command passed, the script will call 
| the corresponding function.
*/
switch ($command) {
    case 'start':
        /*
        |------------------------------------------------------------------
        | Start PHP Built-in Server
        |------------------------------------------------------------------
        | This command launches the built-in PHP development server, serving 
        | files from the 'api' directory.Once the server is started, the user
        | is prompted with instructions to stop it using Ctrl+C.
        */
        echo "Starting the server at http://localhost:8000...\n";
        echo "Press Ctrl+C to stop the server.\n\n";

        $cmd = 'php -S localhost:8000 -t api'; // Modify this path if needed
        passthru($cmd);
        break;

    case 'key:generate':
        /*
        |------------------------------------------------------------------
        | Generate a New JWT_SECRET Key in .enf file
        |------------------------------------------------------------------
        | This command generates a new JWT_SECRET key and outputs it to the 
        | console. The key is typically used for encryption and security 
        | purposes in PHP applications.
        */
        $envFile = __DIR__ . '/.env';

        // Check if .env file exists
        if (!file_exists($envFile)) {
            echo ".env file not found. Run: cp .env.example .env\n";
            return;
        }

        // Read current contents of .env
        $envContent = file_get_contents($envFile);

        // Check if JWT_SECRET already exists
        if (preg_match('/^JWT_SECRET\s*=\s*(.+)/m', $envContent, $matches)) {
            $existingKey = $matches[1];

            echo "JWT_SECRET is already defined: $existingKey\n";
            echo "Do you want to overwrite it? (yes/no): ";
            $handle = fopen ("php://stdin","r");
            $line = trim(fgets($handle));

            if (strtolower($line) !== 'yes') {
                echo "Aborted. JWT_SECRET not changed.\n";
                return;
            }
            fclose($handle);
        }

        // Generate a new JWT secret
        $key = bin2hex(random_bytes(32));

        // Update or insert JWT_SECRET
        if (preg_match('/^JWT_SECRET\s*=.*/m', $envContent)) {
            $envContent = preg_replace('/^JWT_SECRET\s*=.*/m', 'JWT_SECRET=' . $key, $envContent);
        } else {
            $envContent .= "\nJWT_SECRET=" . $key . "\n";
        }

        // Save updated contents to .env
        file_put_contents($envFile, $envContent);

        echo "JWT_SECRET updated successfully!\n";
        echo "New key: $key\n";

        break;
    
    default:
        /*
        |------------------------------------------------------------------
        | Display Available Commands
        |------------------------------------------------------------------
        | If no command is provided or an invalid command is entered, this 
        | section will output the list of available commands for the user.
        */
        echo "Available commands:\n";
        echo "start   Start the PHP development server\n";
        echo "key:generate   Generate a new JWT_SECRET key in .env file\n";
        break;
}
